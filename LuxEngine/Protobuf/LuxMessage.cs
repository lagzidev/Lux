// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: LuxMessage.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace LuxProtobuf {

  /// <summary>Holder for reflection information generated from LuxMessage.proto</summary>
  public static partial class LuxMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for LuxMessage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LuxMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBMdXhNZXNzYWdlLnByb3RvEgtMdXhQcm90b2J1ZiJQCg1OZXR3b3JrUGFj",
            "a2V0EhAKCFBhY2tldElEGAEgASgFEi0KCG1lc3NhZ2VzGAIgAygLMhsuTHV4",
            "UHJvdG9idWYuTmV0d29ya01lc3NhZ2UiwwMKDk5ldHdvcmtNZXNzYWdlEisK",
            "CUhhbmRzaGFrZRgBIAEoCzIWLkx1eFByb3RvYnVmLkhhbmRzaGFrZUgAEjsK",
            "EUhhbmRzaGFrZVJlc3BvbnNlGAIgASgLMh4uTHV4UHJvdG9idWYuSGFuZHNo",
            "YWtlUmVzcG9uc2VIABI7ChFTZXJ2ZXJJbmZvUmVxdWVzdBgDIAEoCzIeLkx1",
            "eFByb3RvYnVmLlNlcnZlckluZm9SZXF1ZXN0SAASPQoSU2VydmVySW5mb1Jl",
            "c3BvbnNlGAQgASgLMh8uTHV4UHJvdG9idWYuU2VydmVySW5mb1Jlc3BvbnNl",
            "SAASLQoKTG9naW5TdGFydBgFIAEoCzIXLkx1eFByb3RvYnVmLkxvZ2luU3Rh",
            "cnRIABIxCgxMb2dpblN1Y2Nlc3MYBiABKAsyGS5MdXhQcm90b2J1Zi5Mb2dp",
            "blN1Y2Nlc3NIABI5ChBLZWVwQWxpdmVSZXF1ZXN0GAcgASgLMh0uTHV4UHJv",
            "dG9idWYuS2VlcEFsaXZlUmVxdWVzdEgAEiMKBUlucHV0GAggASgLMhIuTHV4",
            "UHJvdG9idWYuSW5wdXRIAEIJCgdNZXNzYWdlIiQKCUhhbmRzaGFrZRIXCg9Q",
            "cm90b2NvbFZlcnNpb24YASABKAUiOAoRSGFuZHNoYWtlUmVzcG9uc2USIwoG",
            "U3RhdHVzGAEgASgOMhMuTHV4UHJvdG9idWYuU3RhdHVzIiwKEVNlcnZlcklu",
            "Zm9SZXF1ZXN0EhcKD1Byb3RvY29sVmVyc2lvbhgBIAEoBSIqChJTZXJ2ZXJJ",
            "bmZvUmVzcG9uc2USFAoMSlNPTlJlc3BvbnNlGAEgASgJIjkKCkxvZ2luU3Rh",
            "cnQSEAoIVXNlcm5hbWUYASABKAkSGQoRRW5jcnlwdGVkUGFzc3dvcmQYAiAB",
            "KAkiLAoURW5jcnlwdGlvbktleVJlcXVlc3QSFAoMUlNBUHVibGljS2V5GAEg",
            "ASgJIjoKFUVuY3J5cHRpb25LZXlSZXNwb25zZRIhChlSU0FFbmNyeXB0ZWRF",
            "bmNyeXB0aW9uS2V5GAEgASgJIiQKDExvZ2luU3VjY2VzcxIUCgxTZXNzaW9u",
            "VG9rZW4YASABKAkiEgoQS2VlcEFsaXZlUmVxdWVzdCLsAQoFSW5wdXQSCgoC",
            "VXAYASABKAgSDAoERG93bhgCIAEoCBINCgVSaWdodBgDIAEoCBIMCgRMZWZ0",
            "GAQgASgIEhQKDFVwS2V5UHJlc3NlZBgFIAEoCBIWCg5Eb3duS2V5UHJlc3Nl",
            "ZBgGIAEoCBIXCg9SaWdodEtleVByZXNzZWQYByABKAgSFgoOTGVmdEtleVBy",
            "ZXNzZWQYCCABKAgSEgoKRjRLZXlQcmVzcxgJIAEoCBIKCgJGNBgKIAEoCBIV",
            "Cg1GNUtleVJlbGVhc2VkGAsgASgIEgoKAkY1GAwgASgIEgoKAkY2GA0gASgI",
            "KiwKBlN0YXR1cxIiCh5OT05fTUFUQ0hJTkdfUFJPVE9DT0xfVkVSU0lPTlMQ",
            "AGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::LuxProtobuf.Status), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::LuxProtobuf.NetworkPacket), global::LuxProtobuf.NetworkPacket.Parser, new[]{ "PacketID", "Messages" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LuxProtobuf.NetworkMessage), global::LuxProtobuf.NetworkMessage.Parser, new[]{ "Handshake", "HandshakeResponse", "ServerInfoRequest", "ServerInfoResponse", "LoginStart", "LoginSuccess", "KeepAliveRequest", "Input" }, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LuxProtobuf.Handshake), global::LuxProtobuf.Handshake.Parser, new[]{ "ProtocolVersion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LuxProtobuf.HandshakeResponse), global::LuxProtobuf.HandshakeResponse.Parser, new[]{ "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LuxProtobuf.ServerInfoRequest), global::LuxProtobuf.ServerInfoRequest.Parser, new[]{ "ProtocolVersion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LuxProtobuf.ServerInfoResponse), global::LuxProtobuf.ServerInfoResponse.Parser, new[]{ "JSONResponse" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LuxProtobuf.LoginStart), global::LuxProtobuf.LoginStart.Parser, new[]{ "Username", "EncryptedPassword" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LuxProtobuf.EncryptionKeyRequest), global::LuxProtobuf.EncryptionKeyRequest.Parser, new[]{ "RSAPublicKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LuxProtobuf.EncryptionKeyResponse), global::LuxProtobuf.EncryptionKeyResponse.Parser, new[]{ "RSAEncryptedEncryptionKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LuxProtobuf.LoginSuccess), global::LuxProtobuf.LoginSuccess.Parser, new[]{ "SessionToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LuxProtobuf.KeepAliveRequest), global::LuxProtobuf.KeepAliveRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::LuxProtobuf.Input), global::LuxProtobuf.Input.Parser, new[]{ "Up", "Down", "Right", "Left", "UpKeyPressed", "DownKeyPressed", "RightKeyPressed", "LeftKeyPressed", "F4KeyPress", "F4", "F5KeyReleased", "F5", "F6" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Status {
    [pbr::OriginalName("NON_MATCHING_PROTOCOL_VERSIONS")] NonMatchingProtocolVersions = 0,
  }

  #endregion

  #region Messages
  public sealed partial class NetworkPacket : pb::IMessage<NetworkPacket> {
    private static readonly pb::MessageParser<NetworkPacket> _parser = new pb::MessageParser<NetworkPacket>(() => new NetworkPacket());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetworkPacket> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LuxProtobuf.LuxMessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkPacket() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkPacket(NetworkPacket other) : this() {
      packetID_ = other.packetID_;
      messages_ = other.messages_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkPacket Clone() {
      return new NetworkPacket(this);
    }

    /// <summary>Field number for the "PacketID" field.</summary>
    public const int PacketIDFieldNumber = 1;
    private int packetID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PacketID {
      get { return packetID_; }
      set {
        packetID_ = value;
      }
    }

    /// <summary>Field number for the "messages" field.</summary>
    public const int MessagesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::LuxProtobuf.NetworkMessage> _repeated_messages_codec
        = pb::FieldCodec.ForMessage(18, global::LuxProtobuf.NetworkMessage.Parser);
    private readonly pbc::RepeatedField<global::LuxProtobuf.NetworkMessage> messages_ = new pbc::RepeatedField<global::LuxProtobuf.NetworkMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::LuxProtobuf.NetworkMessage> Messages {
      get { return messages_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetworkPacket);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetworkPacket other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PacketID != other.PacketID) return false;
      if(!messages_.Equals(other.messages_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PacketID != 0) hash ^= PacketID.GetHashCode();
      hash ^= messages_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PacketID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PacketID);
      }
      messages_.WriteTo(output, _repeated_messages_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PacketID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PacketID);
      }
      size += messages_.CalculateSize(_repeated_messages_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetworkPacket other) {
      if (other == null) {
        return;
      }
      if (other.PacketID != 0) {
        PacketID = other.PacketID;
      }
      messages_.Add(other.messages_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PacketID = input.ReadInt32();
            break;
          }
          case 18: {
            messages_.AddEntriesFrom(input, _repeated_messages_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class NetworkMessage : pb::IMessage<NetworkMessage> {
    private static readonly pb::MessageParser<NetworkMessage> _parser = new pb::MessageParser<NetworkMessage>(() => new NetworkMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetworkMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LuxProtobuf.LuxMessageReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkMessage(NetworkMessage other) : this() {
      switch (other.MessageCase) {
        case MessageOneofCase.Handshake:
          Handshake = other.Handshake.Clone();
          break;
        case MessageOneofCase.HandshakeResponse:
          HandshakeResponse = other.HandshakeResponse.Clone();
          break;
        case MessageOneofCase.ServerInfoRequest:
          ServerInfoRequest = other.ServerInfoRequest.Clone();
          break;
        case MessageOneofCase.ServerInfoResponse:
          ServerInfoResponse = other.ServerInfoResponse.Clone();
          break;
        case MessageOneofCase.LoginStart:
          LoginStart = other.LoginStart.Clone();
          break;
        case MessageOneofCase.LoginSuccess:
          LoginSuccess = other.LoginSuccess.Clone();
          break;
        case MessageOneofCase.KeepAliveRequest:
          KeepAliveRequest = other.KeepAliveRequest.Clone();
          break;
        case MessageOneofCase.Input:
          Input = other.Input.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkMessage Clone() {
      return new NetworkMessage(this);
    }

    /// <summary>Field number for the "Handshake" field.</summary>
    public const int HandshakeFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LuxProtobuf.Handshake Handshake {
      get { return messageCase_ == MessageOneofCase.Handshake ? (global::LuxProtobuf.Handshake) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Handshake;
      }
    }

    /// <summary>Field number for the "HandshakeResponse" field.</summary>
    public const int HandshakeResponseFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LuxProtobuf.HandshakeResponse HandshakeResponse {
      get { return messageCase_ == MessageOneofCase.HandshakeResponse ? (global::LuxProtobuf.HandshakeResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.HandshakeResponse;
      }
    }

    /// <summary>Field number for the "ServerInfoRequest" field.</summary>
    public const int ServerInfoRequestFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LuxProtobuf.ServerInfoRequest ServerInfoRequest {
      get { return messageCase_ == MessageOneofCase.ServerInfoRequest ? (global::LuxProtobuf.ServerInfoRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.ServerInfoRequest;
      }
    }

    /// <summary>Field number for the "ServerInfoResponse" field.</summary>
    public const int ServerInfoResponseFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LuxProtobuf.ServerInfoResponse ServerInfoResponse {
      get { return messageCase_ == MessageOneofCase.ServerInfoResponse ? (global::LuxProtobuf.ServerInfoResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.ServerInfoResponse;
      }
    }

    /// <summary>Field number for the "LoginStart" field.</summary>
    public const int LoginStartFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LuxProtobuf.LoginStart LoginStart {
      get { return messageCase_ == MessageOneofCase.LoginStart ? (global::LuxProtobuf.LoginStart) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.LoginStart;
      }
    }

    /// <summary>Field number for the "LoginSuccess" field.</summary>
    public const int LoginSuccessFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LuxProtobuf.LoginSuccess LoginSuccess {
      get { return messageCase_ == MessageOneofCase.LoginSuccess ? (global::LuxProtobuf.LoginSuccess) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.LoginSuccess;
      }
    }

    /// <summary>Field number for the "KeepAliveRequest" field.</summary>
    public const int KeepAliveRequestFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LuxProtobuf.KeepAliveRequest KeepAliveRequest {
      get { return messageCase_ == MessageOneofCase.KeepAliveRequest ? (global::LuxProtobuf.KeepAliveRequest) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.KeepAliveRequest;
      }
    }

    /// <summary>Field number for the "Input" field.</summary>
    public const int InputFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LuxProtobuf.Input Input {
      get { return messageCase_ == MessageOneofCase.Input ? (global::LuxProtobuf.Input) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Input;
      }
    }

    private object message_;
    /// <summary>Enum of possible cases for the "Message" oneof.</summary>
    public enum MessageOneofCase {
      None = 0,
      Handshake = 1,
      HandshakeResponse = 2,
      ServerInfoRequest = 3,
      ServerInfoResponse = 4,
      LoginStart = 5,
      LoginSuccess = 6,
      KeepAliveRequest = 7,
      Input = 8,
    }
    private MessageOneofCase messageCase_ = MessageOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOneofCase MessageCase {
      get { return messageCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      messageCase_ = MessageOneofCase.None;
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetworkMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetworkMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Handshake, other.Handshake)) return false;
      if (!object.Equals(HandshakeResponse, other.HandshakeResponse)) return false;
      if (!object.Equals(ServerInfoRequest, other.ServerInfoRequest)) return false;
      if (!object.Equals(ServerInfoResponse, other.ServerInfoResponse)) return false;
      if (!object.Equals(LoginStart, other.LoginStart)) return false;
      if (!object.Equals(LoginSuccess, other.LoginSuccess)) return false;
      if (!object.Equals(KeepAliveRequest, other.KeepAliveRequest)) return false;
      if (!object.Equals(Input, other.Input)) return false;
      if (MessageCase != other.MessageCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (messageCase_ == MessageOneofCase.Handshake) hash ^= Handshake.GetHashCode();
      if (messageCase_ == MessageOneofCase.HandshakeResponse) hash ^= HandshakeResponse.GetHashCode();
      if (messageCase_ == MessageOneofCase.ServerInfoRequest) hash ^= ServerInfoRequest.GetHashCode();
      if (messageCase_ == MessageOneofCase.ServerInfoResponse) hash ^= ServerInfoResponse.GetHashCode();
      if (messageCase_ == MessageOneofCase.LoginStart) hash ^= LoginStart.GetHashCode();
      if (messageCase_ == MessageOneofCase.LoginSuccess) hash ^= LoginSuccess.GetHashCode();
      if (messageCase_ == MessageOneofCase.KeepAliveRequest) hash ^= KeepAliveRequest.GetHashCode();
      if (messageCase_ == MessageOneofCase.Input) hash ^= Input.GetHashCode();
      hash ^= (int) messageCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (messageCase_ == MessageOneofCase.Handshake) {
        output.WriteRawTag(10);
        output.WriteMessage(Handshake);
      }
      if (messageCase_ == MessageOneofCase.HandshakeResponse) {
        output.WriteRawTag(18);
        output.WriteMessage(HandshakeResponse);
      }
      if (messageCase_ == MessageOneofCase.ServerInfoRequest) {
        output.WriteRawTag(26);
        output.WriteMessage(ServerInfoRequest);
      }
      if (messageCase_ == MessageOneofCase.ServerInfoResponse) {
        output.WriteRawTag(34);
        output.WriteMessage(ServerInfoResponse);
      }
      if (messageCase_ == MessageOneofCase.LoginStart) {
        output.WriteRawTag(42);
        output.WriteMessage(LoginStart);
      }
      if (messageCase_ == MessageOneofCase.LoginSuccess) {
        output.WriteRawTag(50);
        output.WriteMessage(LoginSuccess);
      }
      if (messageCase_ == MessageOneofCase.KeepAliveRequest) {
        output.WriteRawTag(58);
        output.WriteMessage(KeepAliveRequest);
      }
      if (messageCase_ == MessageOneofCase.Input) {
        output.WriteRawTag(66);
        output.WriteMessage(Input);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (messageCase_ == MessageOneofCase.Handshake) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Handshake);
      }
      if (messageCase_ == MessageOneofCase.HandshakeResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HandshakeResponse);
      }
      if (messageCase_ == MessageOneofCase.ServerInfoRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ServerInfoRequest);
      }
      if (messageCase_ == MessageOneofCase.ServerInfoResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ServerInfoResponse);
      }
      if (messageCase_ == MessageOneofCase.LoginStart) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LoginStart);
      }
      if (messageCase_ == MessageOneofCase.LoginSuccess) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LoginSuccess);
      }
      if (messageCase_ == MessageOneofCase.KeepAliveRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(KeepAliveRequest);
      }
      if (messageCase_ == MessageOneofCase.Input) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Input);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetworkMessage other) {
      if (other == null) {
        return;
      }
      switch (other.MessageCase) {
        case MessageOneofCase.Handshake:
          if (Handshake == null) {
            Handshake = new global::LuxProtobuf.Handshake();
          }
          Handshake.MergeFrom(other.Handshake);
          break;
        case MessageOneofCase.HandshakeResponse:
          if (HandshakeResponse == null) {
            HandshakeResponse = new global::LuxProtobuf.HandshakeResponse();
          }
          HandshakeResponse.MergeFrom(other.HandshakeResponse);
          break;
        case MessageOneofCase.ServerInfoRequest:
          if (ServerInfoRequest == null) {
            ServerInfoRequest = new global::LuxProtobuf.ServerInfoRequest();
          }
          ServerInfoRequest.MergeFrom(other.ServerInfoRequest);
          break;
        case MessageOneofCase.ServerInfoResponse:
          if (ServerInfoResponse == null) {
            ServerInfoResponse = new global::LuxProtobuf.ServerInfoResponse();
          }
          ServerInfoResponse.MergeFrom(other.ServerInfoResponse);
          break;
        case MessageOneofCase.LoginStart:
          if (LoginStart == null) {
            LoginStart = new global::LuxProtobuf.LoginStart();
          }
          LoginStart.MergeFrom(other.LoginStart);
          break;
        case MessageOneofCase.LoginSuccess:
          if (LoginSuccess == null) {
            LoginSuccess = new global::LuxProtobuf.LoginSuccess();
          }
          LoginSuccess.MergeFrom(other.LoginSuccess);
          break;
        case MessageOneofCase.KeepAliveRequest:
          if (KeepAliveRequest == null) {
            KeepAliveRequest = new global::LuxProtobuf.KeepAliveRequest();
          }
          KeepAliveRequest.MergeFrom(other.KeepAliveRequest);
          break;
        case MessageOneofCase.Input:
          if (Input == null) {
            Input = new global::LuxProtobuf.Input();
          }
          Input.MergeFrom(other.Input);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::LuxProtobuf.Handshake subBuilder = new global::LuxProtobuf.Handshake();
            if (messageCase_ == MessageOneofCase.Handshake) {
              subBuilder.MergeFrom(Handshake);
            }
            input.ReadMessage(subBuilder);
            Handshake = subBuilder;
            break;
          }
          case 18: {
            global::LuxProtobuf.HandshakeResponse subBuilder = new global::LuxProtobuf.HandshakeResponse();
            if (messageCase_ == MessageOneofCase.HandshakeResponse) {
              subBuilder.MergeFrom(HandshakeResponse);
            }
            input.ReadMessage(subBuilder);
            HandshakeResponse = subBuilder;
            break;
          }
          case 26: {
            global::LuxProtobuf.ServerInfoRequest subBuilder = new global::LuxProtobuf.ServerInfoRequest();
            if (messageCase_ == MessageOneofCase.ServerInfoRequest) {
              subBuilder.MergeFrom(ServerInfoRequest);
            }
            input.ReadMessage(subBuilder);
            ServerInfoRequest = subBuilder;
            break;
          }
          case 34: {
            global::LuxProtobuf.ServerInfoResponse subBuilder = new global::LuxProtobuf.ServerInfoResponse();
            if (messageCase_ == MessageOneofCase.ServerInfoResponse) {
              subBuilder.MergeFrom(ServerInfoResponse);
            }
            input.ReadMessage(subBuilder);
            ServerInfoResponse = subBuilder;
            break;
          }
          case 42: {
            global::LuxProtobuf.LoginStart subBuilder = new global::LuxProtobuf.LoginStart();
            if (messageCase_ == MessageOneofCase.LoginStart) {
              subBuilder.MergeFrom(LoginStart);
            }
            input.ReadMessage(subBuilder);
            LoginStart = subBuilder;
            break;
          }
          case 50: {
            global::LuxProtobuf.LoginSuccess subBuilder = new global::LuxProtobuf.LoginSuccess();
            if (messageCase_ == MessageOneofCase.LoginSuccess) {
              subBuilder.MergeFrom(LoginSuccess);
            }
            input.ReadMessage(subBuilder);
            LoginSuccess = subBuilder;
            break;
          }
          case 58: {
            global::LuxProtobuf.KeepAliveRequest subBuilder = new global::LuxProtobuf.KeepAliveRequest();
            if (messageCase_ == MessageOneofCase.KeepAliveRequest) {
              subBuilder.MergeFrom(KeepAliveRequest);
            }
            input.ReadMessage(subBuilder);
            KeepAliveRequest = subBuilder;
            break;
          }
          case 66: {
            global::LuxProtobuf.Input subBuilder = new global::LuxProtobuf.Input();
            if (messageCase_ == MessageOneofCase.Input) {
              subBuilder.MergeFrom(Input);
            }
            input.ReadMessage(subBuilder);
            Input = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Sent by client 
  /// </summary>
  public sealed partial class Handshake : pb::IMessage<Handshake> {
    private static readonly pb::MessageParser<Handshake> _parser = new pb::MessageParser<Handshake>(() => new Handshake());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Handshake> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LuxProtobuf.LuxMessageReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Handshake() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Handshake(Handshake other) : this() {
      protocolVersion_ = other.protocolVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Handshake Clone() {
      return new Handshake(this);
    }

    /// <summary>Field number for the "ProtocolVersion" field.</summary>
    public const int ProtocolVersionFieldNumber = 1;
    private int protocolVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ProtocolVersion {
      get { return protocolVersion_; }
      set {
        protocolVersion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Handshake);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Handshake other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProtocolVersion != other.ProtocolVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProtocolVersion != 0) hash ^= ProtocolVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProtocolVersion != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ProtocolVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProtocolVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProtocolVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Handshake other) {
      if (other == null) {
        return;
      }
      if (other.ProtocolVersion != 0) {
        ProtocolVersion = other.ProtocolVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProtocolVersion = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Sent by server 
  /// </summary>
  public sealed partial class HandshakeResponse : pb::IMessage<HandshakeResponse> {
    private static readonly pb::MessageParser<HandshakeResponse> _parser = new pb::MessageParser<HandshakeResponse>(() => new HandshakeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HandshakeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LuxProtobuf.LuxMessageReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandshakeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandshakeResponse(HandshakeResponse other) : this() {
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandshakeResponse Clone() {
      return new HandshakeResponse(this);
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::LuxProtobuf.Status status_ = global::LuxProtobuf.Status.NonMatchingProtocolVersions;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::LuxProtobuf.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HandshakeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HandshakeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != global::LuxProtobuf.Status.NonMatchingProtocolVersions) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != global::LuxProtobuf.Status.NonMatchingProtocolVersions) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != global::LuxProtobuf.Status.NonMatchingProtocolVersions) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HandshakeResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != global::LuxProtobuf.Status.NonMatchingProtocolVersions) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Status = (global::LuxProtobuf.Status) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Sent by client 
  /// </summary>
  public sealed partial class ServerInfoRequest : pb::IMessage<ServerInfoRequest> {
    private static readonly pb::MessageParser<ServerInfoRequest> _parser = new pb::MessageParser<ServerInfoRequest>(() => new ServerInfoRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerInfoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LuxProtobuf.LuxMessageReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerInfoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerInfoRequest(ServerInfoRequest other) : this() {
      protocolVersion_ = other.protocolVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerInfoRequest Clone() {
      return new ServerInfoRequest(this);
    }

    /// <summary>Field number for the "ProtocolVersion" field.</summary>
    public const int ProtocolVersionFieldNumber = 1;
    private int protocolVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ProtocolVersion {
      get { return protocolVersion_; }
      set {
        protocolVersion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerInfoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerInfoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProtocolVersion != other.ProtocolVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProtocolVersion != 0) hash ^= ProtocolVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProtocolVersion != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ProtocolVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProtocolVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProtocolVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerInfoRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProtocolVersion != 0) {
        ProtocolVersion = other.ProtocolVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProtocolVersion = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Sent by server 
  /// </summary>
  public sealed partial class ServerInfoResponse : pb::IMessage<ServerInfoResponse> {
    private static readonly pb::MessageParser<ServerInfoResponse> _parser = new pb::MessageParser<ServerInfoResponse>(() => new ServerInfoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerInfoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LuxProtobuf.LuxMessageReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerInfoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerInfoResponse(ServerInfoResponse other) : this() {
      jSONResponse_ = other.jSONResponse_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerInfoResponse Clone() {
      return new ServerInfoResponse(this);
    }

    /// <summary>Field number for the "JSONResponse" field.</summary>
    public const int JSONResponseFieldNumber = 1;
    private string jSONResponse_ = "";
    /// <summary>
    ///
    ///"ServerID": "someuuid",
    ///"ServerName": "awesomeness"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JSONResponse {
      get { return jSONResponse_; }
      set {
        jSONResponse_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerInfoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerInfoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (JSONResponse != other.JSONResponse) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (JSONResponse.Length != 0) hash ^= JSONResponse.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (JSONResponse.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(JSONResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (JSONResponse.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JSONResponse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerInfoResponse other) {
      if (other == null) {
        return;
      }
      if (other.JSONResponse.Length != 0) {
        JSONResponse = other.JSONResponse;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            JSONResponse = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Sent by client 
  /// </summary>
  public sealed partial class LoginStart : pb::IMessage<LoginStart> {
    private static readonly pb::MessageParser<LoginStart> _parser = new pb::MessageParser<LoginStart>(() => new LoginStart());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginStart> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LuxProtobuf.LuxMessageReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginStart() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginStart(LoginStart other) : this() {
      username_ = other.username_;
      encryptedPassword_ = other.encryptedPassword_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginStart Clone() {
      return new LoginStart(this);
    }

    /// <summary>Field number for the "Username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EncryptedPassword" field.</summary>
    public const int EncryptedPasswordFieldNumber = 2;
    private string encryptedPassword_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EncryptedPassword {
      get { return encryptedPassword_; }
      set {
        encryptedPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginStart);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginStart other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (EncryptedPassword != other.EncryptedPassword) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (EncryptedPassword.Length != 0) hash ^= EncryptedPassword.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (EncryptedPassword.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EncryptedPassword);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (EncryptedPassword.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EncryptedPassword);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginStart other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.EncryptedPassword.Length != 0) {
        EncryptedPassword = other.EncryptedPassword;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            EncryptedPassword = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Sent by server 
  /// </summary>
  public sealed partial class EncryptionKeyRequest : pb::IMessage<EncryptionKeyRequest> {
    private static readonly pb::MessageParser<EncryptionKeyRequest> _parser = new pb::MessageParser<EncryptionKeyRequest>(() => new EncryptionKeyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EncryptionKeyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LuxProtobuf.LuxMessageReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncryptionKeyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncryptionKeyRequest(EncryptionKeyRequest other) : this() {
      rSAPublicKey_ = other.rSAPublicKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncryptionKeyRequest Clone() {
      return new EncryptionKeyRequest(this);
    }

    /// <summary>Field number for the "RSAPublicKey" field.</summary>
    public const int RSAPublicKeyFieldNumber = 1;
    private string rSAPublicKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RSAPublicKey {
      get { return rSAPublicKey_; }
      set {
        rSAPublicKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EncryptionKeyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EncryptionKeyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RSAPublicKey != other.RSAPublicKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RSAPublicKey.Length != 0) hash ^= RSAPublicKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RSAPublicKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RSAPublicKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RSAPublicKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RSAPublicKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EncryptionKeyRequest other) {
      if (other == null) {
        return;
      }
      if (other.RSAPublicKey.Length != 0) {
        RSAPublicKey = other.RSAPublicKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RSAPublicKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// After this message is sent/received, all packets will be encrypted 
  /// </summary>
  public sealed partial class EncryptionKeyResponse : pb::IMessage<EncryptionKeyResponse> {
    private static readonly pb::MessageParser<EncryptionKeyResponse> _parser = new pb::MessageParser<EncryptionKeyResponse>(() => new EncryptionKeyResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EncryptionKeyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LuxProtobuf.LuxMessageReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncryptionKeyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncryptionKeyResponse(EncryptionKeyResponse other) : this() {
      rSAEncryptedEncryptionKey_ = other.rSAEncryptedEncryptionKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EncryptionKeyResponse Clone() {
      return new EncryptionKeyResponse(this);
    }

    /// <summary>Field number for the "RSAEncryptedEncryptionKey" field.</summary>
    public const int RSAEncryptedEncryptionKeyFieldNumber = 1;
    private string rSAEncryptedEncryptionKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RSAEncryptedEncryptionKey {
      get { return rSAEncryptedEncryptionKey_; }
      set {
        rSAEncryptedEncryptionKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EncryptionKeyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EncryptionKeyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RSAEncryptedEncryptionKey != other.RSAEncryptedEncryptionKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RSAEncryptedEncryptionKey.Length != 0) hash ^= RSAEncryptedEncryptionKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RSAEncryptedEncryptionKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RSAEncryptedEncryptionKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RSAEncryptedEncryptionKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RSAEncryptedEncryptionKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EncryptionKeyResponse other) {
      if (other == null) {
        return;
      }
      if (other.RSAEncryptedEncryptionKey.Length != 0) {
        RSAEncryptedEncryptionKey = other.RSAEncryptedEncryptionKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RSAEncryptedEncryptionKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Sent by server 
  /// </summary>
  public sealed partial class LoginSuccess : pb::IMessage<LoginSuccess> {
    private static readonly pb::MessageParser<LoginSuccess> _parser = new pb::MessageParser<LoginSuccess>(() => new LoginSuccess());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginSuccess> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LuxProtobuf.LuxMessageReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginSuccess() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginSuccess(LoginSuccess other) : this() {
      sessionToken_ = other.sessionToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginSuccess Clone() {
      return new LoginSuccess(this);
    }

    /// <summary>Field number for the "SessionToken" field.</summary>
    public const int SessionTokenFieldNumber = 1;
    private string sessionToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionToken {
      get { return sessionToken_; }
      set {
        sessionToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginSuccess);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginSuccess other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionToken != other.SessionToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionToken.Length != 0) hash ^= SessionToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SessionToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginSuccess other) {
      if (other == null) {
        return;
      }
      if (other.SessionToken.Length != 0) {
        SessionToken = other.SessionToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SessionToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Sent by client 
  /// </summary>
  public sealed partial class KeepAliveRequest : pb::IMessage<KeepAliveRequest> {
    private static readonly pb::MessageParser<KeepAliveRequest> _parser = new pb::MessageParser<KeepAliveRequest>(() => new KeepAliveRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeepAliveRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LuxProtobuf.LuxMessageReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeepAliveRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeepAliveRequest(KeepAliveRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeepAliveRequest Clone() {
      return new KeepAliveRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeepAliveRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeepAliveRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeepAliveRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// Sent by client 
  /// </summary>
  public sealed partial class Input : pb::IMessage<Input> {
    private static readonly pb::MessageParser<Input> _parser = new pb::MessageParser<Input>(() => new Input());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Input> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::LuxProtobuf.LuxMessageReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Input() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Input(Input other) : this() {
      up_ = other.up_;
      down_ = other.down_;
      right_ = other.right_;
      left_ = other.left_;
      upKeyPressed_ = other.upKeyPressed_;
      downKeyPressed_ = other.downKeyPressed_;
      rightKeyPressed_ = other.rightKeyPressed_;
      leftKeyPressed_ = other.leftKeyPressed_;
      f4KeyPress_ = other.f4KeyPress_;
      f4_ = other.f4_;
      f5KeyReleased_ = other.f5KeyReleased_;
      f5_ = other.f5_;
      f6_ = other.f6_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Input Clone() {
      return new Input(this);
    }

    /// <summary>Field number for the "Up" field.</summary>
    public const int UpFieldNumber = 1;
    private bool up_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Up {
      get { return up_; }
      set {
        up_ = value;
      }
    }

    /// <summary>Field number for the "Down" field.</summary>
    public const int DownFieldNumber = 2;
    private bool down_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Down {
      get { return down_; }
      set {
        down_ = value;
      }
    }

    /// <summary>Field number for the "Right" field.</summary>
    public const int RightFieldNumber = 3;
    private bool right_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Right {
      get { return right_; }
      set {
        right_ = value;
      }
    }

    /// <summary>Field number for the "Left" field.</summary>
    public const int LeftFieldNumber = 4;
    private bool left_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Left {
      get { return left_; }
      set {
        left_ = value;
      }
    }

    /// <summary>Field number for the "UpKeyPressed" field.</summary>
    public const int UpKeyPressedFieldNumber = 5;
    private bool upKeyPressed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UpKeyPressed {
      get { return upKeyPressed_; }
      set {
        upKeyPressed_ = value;
      }
    }

    /// <summary>Field number for the "DownKeyPressed" field.</summary>
    public const int DownKeyPressedFieldNumber = 6;
    private bool downKeyPressed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DownKeyPressed {
      get { return downKeyPressed_; }
      set {
        downKeyPressed_ = value;
      }
    }

    /// <summary>Field number for the "RightKeyPressed" field.</summary>
    public const int RightKeyPressedFieldNumber = 7;
    private bool rightKeyPressed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool RightKeyPressed {
      get { return rightKeyPressed_; }
      set {
        rightKeyPressed_ = value;
      }
    }

    /// <summary>Field number for the "LeftKeyPressed" field.</summary>
    public const int LeftKeyPressedFieldNumber = 8;
    private bool leftKeyPressed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool LeftKeyPressed {
      get { return leftKeyPressed_; }
      set {
        leftKeyPressed_ = value;
      }
    }

    /// <summary>Field number for the "F4KeyPress" field.</summary>
    public const int F4KeyPressFieldNumber = 9;
    private bool f4KeyPress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool F4KeyPress {
      get { return f4KeyPress_; }
      set {
        f4KeyPress_ = value;
      }
    }

    /// <summary>Field number for the "F4" field.</summary>
    public const int F4FieldNumber = 10;
    private bool f4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool F4 {
      get { return f4_; }
      set {
        f4_ = value;
      }
    }

    /// <summary>Field number for the "F5KeyReleased" field.</summary>
    public const int F5KeyReleasedFieldNumber = 11;
    private bool f5KeyReleased_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool F5KeyReleased {
      get { return f5KeyReleased_; }
      set {
        f5KeyReleased_ = value;
      }
    }

    /// <summary>Field number for the "F5" field.</summary>
    public const int F5FieldNumber = 12;
    private bool f5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool F5 {
      get { return f5_; }
      set {
        f5_ = value;
      }
    }

    /// <summary>Field number for the "F6" field.</summary>
    public const int F6FieldNumber = 13;
    private bool f6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool F6 {
      get { return f6_; }
      set {
        f6_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Input);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Input other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Up != other.Up) return false;
      if (Down != other.Down) return false;
      if (Right != other.Right) return false;
      if (Left != other.Left) return false;
      if (UpKeyPressed != other.UpKeyPressed) return false;
      if (DownKeyPressed != other.DownKeyPressed) return false;
      if (RightKeyPressed != other.RightKeyPressed) return false;
      if (LeftKeyPressed != other.LeftKeyPressed) return false;
      if (F4KeyPress != other.F4KeyPress) return false;
      if (F4 != other.F4) return false;
      if (F5KeyReleased != other.F5KeyReleased) return false;
      if (F5 != other.F5) return false;
      if (F6 != other.F6) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Up != false) hash ^= Up.GetHashCode();
      if (Down != false) hash ^= Down.GetHashCode();
      if (Right != false) hash ^= Right.GetHashCode();
      if (Left != false) hash ^= Left.GetHashCode();
      if (UpKeyPressed != false) hash ^= UpKeyPressed.GetHashCode();
      if (DownKeyPressed != false) hash ^= DownKeyPressed.GetHashCode();
      if (RightKeyPressed != false) hash ^= RightKeyPressed.GetHashCode();
      if (LeftKeyPressed != false) hash ^= LeftKeyPressed.GetHashCode();
      if (F4KeyPress != false) hash ^= F4KeyPress.GetHashCode();
      if (F4 != false) hash ^= F4.GetHashCode();
      if (F5KeyReleased != false) hash ^= F5KeyReleased.GetHashCode();
      if (F5 != false) hash ^= F5.GetHashCode();
      if (F6 != false) hash ^= F6.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Up != false) {
        output.WriteRawTag(8);
        output.WriteBool(Up);
      }
      if (Down != false) {
        output.WriteRawTag(16);
        output.WriteBool(Down);
      }
      if (Right != false) {
        output.WriteRawTag(24);
        output.WriteBool(Right);
      }
      if (Left != false) {
        output.WriteRawTag(32);
        output.WriteBool(Left);
      }
      if (UpKeyPressed != false) {
        output.WriteRawTag(40);
        output.WriteBool(UpKeyPressed);
      }
      if (DownKeyPressed != false) {
        output.WriteRawTag(48);
        output.WriteBool(DownKeyPressed);
      }
      if (RightKeyPressed != false) {
        output.WriteRawTag(56);
        output.WriteBool(RightKeyPressed);
      }
      if (LeftKeyPressed != false) {
        output.WriteRawTag(64);
        output.WriteBool(LeftKeyPressed);
      }
      if (F4KeyPress != false) {
        output.WriteRawTag(72);
        output.WriteBool(F4KeyPress);
      }
      if (F4 != false) {
        output.WriteRawTag(80);
        output.WriteBool(F4);
      }
      if (F5KeyReleased != false) {
        output.WriteRawTag(88);
        output.WriteBool(F5KeyReleased);
      }
      if (F5 != false) {
        output.WriteRawTag(96);
        output.WriteBool(F5);
      }
      if (F6 != false) {
        output.WriteRawTag(104);
        output.WriteBool(F6);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Up != false) {
        size += 1 + 1;
      }
      if (Down != false) {
        size += 1 + 1;
      }
      if (Right != false) {
        size += 1 + 1;
      }
      if (Left != false) {
        size += 1 + 1;
      }
      if (UpKeyPressed != false) {
        size += 1 + 1;
      }
      if (DownKeyPressed != false) {
        size += 1 + 1;
      }
      if (RightKeyPressed != false) {
        size += 1 + 1;
      }
      if (LeftKeyPressed != false) {
        size += 1 + 1;
      }
      if (F4KeyPress != false) {
        size += 1 + 1;
      }
      if (F4 != false) {
        size += 1 + 1;
      }
      if (F5KeyReleased != false) {
        size += 1 + 1;
      }
      if (F5 != false) {
        size += 1 + 1;
      }
      if (F6 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Input other) {
      if (other == null) {
        return;
      }
      if (other.Up != false) {
        Up = other.Up;
      }
      if (other.Down != false) {
        Down = other.Down;
      }
      if (other.Right != false) {
        Right = other.Right;
      }
      if (other.Left != false) {
        Left = other.Left;
      }
      if (other.UpKeyPressed != false) {
        UpKeyPressed = other.UpKeyPressed;
      }
      if (other.DownKeyPressed != false) {
        DownKeyPressed = other.DownKeyPressed;
      }
      if (other.RightKeyPressed != false) {
        RightKeyPressed = other.RightKeyPressed;
      }
      if (other.LeftKeyPressed != false) {
        LeftKeyPressed = other.LeftKeyPressed;
      }
      if (other.F4KeyPress != false) {
        F4KeyPress = other.F4KeyPress;
      }
      if (other.F4 != false) {
        F4 = other.F4;
      }
      if (other.F5KeyReleased != false) {
        F5KeyReleased = other.F5KeyReleased;
      }
      if (other.F5 != false) {
        F5 = other.F5;
      }
      if (other.F6 != false) {
        F6 = other.F6;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Up = input.ReadBool();
            break;
          }
          case 16: {
            Down = input.ReadBool();
            break;
          }
          case 24: {
            Right = input.ReadBool();
            break;
          }
          case 32: {
            Left = input.ReadBool();
            break;
          }
          case 40: {
            UpKeyPressed = input.ReadBool();
            break;
          }
          case 48: {
            DownKeyPressed = input.ReadBool();
            break;
          }
          case 56: {
            RightKeyPressed = input.ReadBool();
            break;
          }
          case 64: {
            LeftKeyPressed = input.ReadBool();
            break;
          }
          case 72: {
            F4KeyPress = input.ReadBool();
            break;
          }
          case 80: {
            F4 = input.ReadBool();
            break;
          }
          case 88: {
            F5KeyReleased = input.ReadBool();
            break;
          }
          case 96: {
            F5 = input.ReadBool();
            break;
          }
          case 104: {
            F6 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
